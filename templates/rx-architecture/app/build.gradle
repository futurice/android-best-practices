buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.0.0'
        classpath 'org.robolectric:robolectric-gradle-plugin:0.14.1'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'checkstyle'
apply plugin: 'robolectric'

dependencies {
    compile 'io.reactivex:rxjava:1.0.8'
    compile 'io.reactivex:rxandroid:0.24.0'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.5.1'
    compile 'com.fasterxml.jackson.core:jackson-core:2.5.1'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.5.1'
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.2.0'
    compile 'com.squareup.okhttp:okhttp:2.2.0'
    compile 'com.android.support:support-v4:22.0.0'

    androidTestCompile 'com.jayway.android.robotium:robotium-solo:5.3.1'

    androidTestCompile('junit:junit:4.11')
    androidTestCompile('org.robolectric:robolectric:2.3') {
        exclude module: 'classworlds'
        exclude module: 'commons-logging'
        exclude module: 'httpclient'
        exclude module: 'maven-artifact'
        exclude module: 'maven-artifact-manager'
        exclude module: 'maven-error-diagnostics'
        exclude module: 'maven-model'
        exclude module: 'maven-project'
        exclude module: 'maven-settings'
        exclude module: 'plexus-container-default'
        exclude module: 'plexus-interpolation'
        exclude module: 'plexus-utils'
        exclude module: 'wagon-file'
        exclude module: 'wagon-http-lightweight'
        exclude module: 'wagon-provider-api'
    }
}

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.0"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }
    signingConfigs {
        release {
            try {
                // Define KEYSTORE_PASSWORD and KEY_PASSWORD in gradle.properties
                // (Only where you do release builds; do NOT commit those into version control.)
                storeFile file("example.keystore")
                storePassword KEYSTORE_PASSWORD
                keyAlias "client"
                keyPassword KEY_PASSWORD
            }
            catch (ex) {
                logger.warning('NB: For release builds, you must define KEYSTORE_PASSWORD and KEY_PASSWORD in gradle.properties.')
            }
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            applicationIdSuffix '.debug'
            versionNameSuffix '-DEBUG'
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'LICENSE.txt'
    }
}

robolectric {
    include '**/*Test.class'
    exclude '**/device/**/*.class'
}

task checkstyle(type: Checkstyle) {
    description 'Checks if the code is somewhat acceptable'
    configFile file('./checkstyle.xml')
    source 'src/main/java'
    include '**/*.java'
    exclude '**/gen/**'
    classpath = files() // empty because unnecessary for checkstyle
}

// Get location of adb
Properties localProperties = new Properties()
try {
    localProperties.load(project.rootProject.file('local.properties').newDataInputStream())
}
catch (ex) {
    throw new InvalidUserDataException("You should define the path to your Android SDK as a " +
        "property `sdk.dir` in local.properties on the project root."
    )
}
def adb = localProperties.getProperty('sdk.dir') + '/platform-tools/adb'

task runDebug(dependsOn: 'installDebug') {
    description 'Runs the debug-flavour of the app on the connected device'
    doLast {
        exec{commandLine "$adb", "shell", "am", "start", "-n", "com.futurice.project/.MainActivity"}
    }
}

task runRelease(dependsOn: 'installRelease') {
    description 'Runs the release-flavour of the app on the connected device'
    doLast {
        exec{commandLine "$adb", "shell", "am", "start", "-n", "com.futurice.project/.MainActivity"}
    }
}
